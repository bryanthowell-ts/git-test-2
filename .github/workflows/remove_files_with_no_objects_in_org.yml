# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Remove Files with No Objects in Org

on: 
  workflow_dispatch:
      

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest
    environment: |-
        ${{
          github.ref_name == 'prod' && 'production'
        || github.ref_name == 'dev'    && 'dev'
        || github.ref_name == 'test' && 'test'
        || github.ref_name == 'uat' && 'uat'
        || 'default'
        }} 

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install thoughtspot_rest_api 
        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Get Org_ID from Org_Name ${{ vars.TS_ORG_NAME }}
      env:
       TS_SERVER: ${{ secrets.TS_SERVER }}
       TS_SECRET_KEY: ${{ secrets.TS_SECRET_KEY }}
       TS_USERNAME: ${{ secrets.TS_INSTANCE_ADMIN_USERNAME }}
       TS_ORG_NAME: ${{ vars.TS_ORG_NAME }}
      run: |
         python .github/workflows/retrieve_org_id_from_org_name.py >> $GITHUB_ENV
    - name: Delete files with no matching obj_id on ${{ vars.TS_ORG_NAME }}
      env:
       TS_SERVER: ${{ secrets.TS_SERVER }}
       TS_SECRET_KEY: ${{ secrets.TS_SECRET_KEY }}
       TS_USERNAME: ${{ secrets.TS_DOWNLOAD_USERNAME }}
      run: |
        git config --local user.email "${{ github.actor_id }}+${{ github.triggering_actor }}@users.noreply.github.com"
        git config --local user.name "${{ github.triggering_actor }}"
        python .github/workflows/files_with_no_obj_on_org.py > files_to_remove.txt
        if [ -s "files_to_remove.txt" ]; then
        echo "Removing the following files"
        cat files_to_remove.txt
        cat files_to_remove.txt | xargs git rm
        rm files_to_remove.txt
        git add *
        git diff-index --quiet HEAD || git commit -a -m "Run ID ${{ github.run_id }}/${{github.run_attempt}} cleanup files from Org ${{ vars.TS_ORG_NAME }}"
        git push
        else
        echo "No files found to remove"
        rm files_to_remove.txt
        fi
        
