# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Download TML from Org to Branch

on: 
  workflow_dispatch:
    inputs:
      OBJECT_TYPE:
        type: choice
        description: Type of Objects to Download
        options: 
        - ALL
        - LIVEBOARD
        - ANSWER
        - DATA
        - CONNECTION
        required: true
      RECORD_SIZE_LIMIT:
        type: number
        description: Limit Number Objects Downloaded (-1 is All)
        default: "-1"
        required: true
      FILTER_AUTHOR_NAME:
        type: string
        description: 'Filter to Author (Owner) Name'
        required: true
        default: "{None}"
      FILTER_TAG_NAME:
        type: string
        description: 'Filter on Tag name'
        required: true
        default: "{None}"
#      TS_ORG_NAME_OVERRIDE:
#        type: string
#        description: 'ThoughtSpot org name (not org_id)'
#        required: true
#        default: '{None}'
      

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest
    environment: |-
        ${{
          github.ref_name == 'prod' && 'production'
        || github.ref_name == 'dev'    && 'dev'
        || github.ref_name == 'test' && 'test'
        || github.ref_name == 'uat' && 'uat'
        || 'default'
        }} 

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install thoughtspot_rest_api 
        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Download 
      env:
       TS_SERVER: ${{ secrets.TS_SERVER }}
       TS_SECRET_KEY: ${{ secrets.TS_SECRET_KEY }}
       TS_USERNAME: ${{ secrets.TS_DOWNLOAD_USERNAME }}
       TS_ORG_NAME: ${{ vars.TS_ORG_NAME }}
       AUTHOR_FILTER: ${{ github.event.inputs.FILTER_AUTHOR_NAME }}
       TAG_FILTER: ${{ github.event.inputs.FILTER_TAG_NAME }}
       OBJECT_TYPE: ${{ github.event.inputs.OBJECT_TYPE }}
       RECORD_SIZE_LIMIT: ${{ github.event.inputs.RECORD_SIZE_LIMIT }}
      run: |
        git config --local user.email "${{ github.actor_id }}+${{ github.triggering_actor }}@users.noreply.github.com"
        git config --local user.name "${{ github.triggering_actor }}"
        python .github/workflows/download_tml_to_disk.py > latest_download_run.log
    - name: Archive production artifacts
      uses: actions/upload-artifact@v5
      with:
          name: latest-download-log
          path: latest_download_run.log
    - name : Commit and push TML
      env:
       TS_ORG_NAME: ${{ vars.TS_ORG_NAME }}
      run: |
        rm latest_download_run.log
        git add *
        git diff-index --quiet HEAD || git commit -a -m "Run ID ${{ github.run_id }}/${{github.run_attempt}} export from Org ${{ vars.TS_ORG_NAME }}"
        git push
